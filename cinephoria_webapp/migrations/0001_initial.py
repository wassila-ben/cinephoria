# Generated by Django 5.1.7 on 2025-03-11 13:24

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cinema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(default='Cinéma inconnu', max_length=100)),
                ('adresse', models.TextField(default='1 place des étoiles')),
                ('cp', models.CharField(default='75000', max_length=10)),
                ('ville', models.CharField(default='Paris', max_length=50)),
                ('pays', models.CharField(default='France', max_length=50)),
                ('telephone', models.CharField(default='01 23 45 67 89', max_length=20)),
                ('horaire_ouverture', models.TimeField(default='10:00')),
                ('horaire_fermeture', models.TimeField(default='23:00')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(default='Inconnu', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Qualite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_qualite', models.CharField(default='Standard', max_length=50)),
                ('prix_seance', models.FloatField(default=10.0)),
                ('logo_qualite', models.ImageField(default='default/logo.png', upload_to='logos/')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, default='Aucune description')),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('identifiant', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('nom', models.CharField(default='Nom inconnu', max_length=50)),
                ('prenom', models.CharField(default='Prénom inconnu', max_length=50)),
                ('pays', models.CharField(default='France', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='utilisateur_groups', to='auth.group', verbose_name='groupes')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='utilisateur_permissions', to='auth.permission', verbose_name='autorisations utilisateur')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, default='Anonyme', max_length=100)),
                ('objet_demande', models.CharField(default='Objet inconnu', max_length=100)),
                ('description', models.TextField(default='Pas de description')),
                ('date', models.DateField(auto_now_add=True)),
                ('statut', models.CharField(default='En attente', max_length=50)),
                ('cinema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinephoria_webapp.cinema')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(default='Titre inconnu', max_length=100)),
                ('synopsis', models.TextField(default='Synopsis indisponible')),
                ('affiche', models.ImageField(upload_to='films/')),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('age_minimum', models.IntegerField(default=0)),
                ('label_coup_de_coeur', models.BooleanField(default=False)),
                ('note', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('date_derniere_modification', models.DateTimeField(auto_now=True)),
                ('dernier_modificateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modifications', to=settings.AUTH_USER_MODEL)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinephoria_webapp.genre')),
            ],
        ),
        migrations.CreateModel(
            name='Avis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('commentaire', models.TextField(default='Pas de commentaire')),
                ('date', models.DateField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avis', to='cinephoria_webapp.film')),
            ],
        ),
        migrations.CreateModel(
            name='LogActivite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(default='Action inconnue', max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(default='Aucune notification', max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('lue', models.BooleanField(default=False)),
                ('utilisateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_reservation', models.DateField(auto_now_add=True)),
                ('nombre_places', models.IntegerField(default=1)),
                ('prix_total', models.FloatField(default=0.0)),
                ('statut', models.CharField(choices=[('en attente', 'En attente'), ('confirmée', 'Confirmée'), ('annulée', 'Annulée')], default='en attente', max_length=50)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Billet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_billet', models.CharField(default='000000', max_length=20, unique=True)),
                ('qr_code', models.ImageField(blank=True, upload_to='qrcodes/')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinephoria_webapp.reservation')),
            ],
        ),
        migrations.CreateModel(
            name='Salle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_salle', models.CharField(default='0', max_length=2)),
                ('total_places', models.PositiveIntegerField()),
                ('places_pmr', models.PositiveIntegerField(default=0)),
                ('qualite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinephoria_webapp.qualite')),
            ],
        ),
        migrations.CreateModel(
            name='Seance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heure_debut', models.TimeField(default='00:00')),
                ('heure_fin', models.TimeField(default='00:00')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinephoria_webapp.film')),
                ('salle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinephoria_webapp.salle')),
            ],
        ),
        migrations.AddField(
            model_name='reservation',
            name='seance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinephoria_webapp.seance'),
        ),
        migrations.AddField(
            model_name='cinema',
            name='seances',
            field=models.ManyToManyField(to='cinephoria_webapp.seance'),
        ),
        migrations.CreateModel(
            name='Siege',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_siege', models.PositiveBigIntegerField()),
                ('rangee', models.CharField(default='A', max_length=10)),
                ('occupe', models.BooleanField(default=False)),
                ('place_pmr', models.BooleanField(default=False)),
                ('salle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sieges', to='cinephoria_webapp.salle')),
            ],
        ),
        migrations.CreateModel(
            name='ReservationSiege',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinephoria_webapp.reservation')),
                ('siege', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinephoria_webapp.siege')),
            ],
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_incident', models.CharField(default='Type inconnu', max_length=100)),
                ('type_materiel', models.CharField(default='Matériel inconnu', max_length=100)),
                ('description', models.TextField(default='Description non disponible')),
                ('date', models.DateField(auto_now_add=True)),
                ('statut', models.CharField(default='Ouvert', max_length=50)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('siege', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinephoria_webapp.siege')),
            ],
        ),
    ]
